version: '3.8'

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: iot-timescaledb
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iot_db}
      POSTGRES_USER: ${POSTGRES_USER:-iot}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-2003}
      TIMESCALEDB_TELEMETRY: off
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-iot}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iot-network

  redis:
    image: redis:7-alpine
    container_name: iot-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-2003}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-2003}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iot-network

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: iot-mosquitto
    restart: unless-stopped
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mqtt/passwd:/mosquitto/config/passwd
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - iot-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: iot-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-iot}:${POSTGRES_PASSWORD:-2003}@timescaledb:5432/${POSTGRES_DB:-iot_db}
      REDIS_URL: redis://:${REDIS_PASSWORD:-2003}@redis:6379/0
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      MQTT_USER: ${MQTT_USER:-vps}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-2003}
      JWT_SECRET: ${JWT_SECRET:-ThaiVuongMinhThaoLinhTu@2003}
      JWT_ALGORITHM: HS256
      JWT_EXPIRE_MINUTES: 10080
      ENVIRONMENT: production
      LOG_LEVEL: INFO
    volumes:
      - ./backend/app:/app/app
    ports:
      - "8000:8000"
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
      mosquitto:
        condition: service_started
    networks:
      - iot-network

  nginx:
    image: nginx:alpine
    container_name: iot-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - iot-network

volumes:
  timescale_data:
  redis_data:
  mosquitto_data:
  mosquitto_logs:

networks:
  iot-network:
    driver: bridge
