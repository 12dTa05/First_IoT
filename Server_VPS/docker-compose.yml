version: '3.8'

services:
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: iot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: iot_db
      POSTGRES_USER: iot
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iot -d iot_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mqtt:
    image: eclipse-mosquitto:2
    container_name: iot-mqtt
    restart: unless-stopped
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./mosquitto/passwd:/mosquitto/passwd
      - ./mosquitto/certs:/mosquitto/certs
    ports:
      - "1883:1883"
    networks:
      - iot-network

  api:
    build: ./api
    container_name: iot-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: iot_db
      DB_USER: iot
      DB_PASSWORD: ${DB_PASSWORD}
      MQTT_HOST: mqtt
      MQTT_PORT: 1883
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      API_PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      mqtt:
        condition: service_started
    networks:
      - iot-network

  nginx:
    image: nginx:alpine
    container_name: iot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    networks:
      - iot-network

networks:
  iot-network:
    driver: bridge

volumes:
  postgres_data: